name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/actions/**'
      - '**.md'

jobs:
  # FETCH CURRENT PLUGIN VERSION
  fetch-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      release: ${{ steps.get_version.outputs.release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get toolkit Version
        id: get_version
        run: |
          VERSION=$(cat VERSION)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            echo "release=true" >> $GITHUB_OUTPUT
          else
            echo "release=false" >> $GITHUB_OUTPUT
          fi

  snapshot:
    needs: [fetch-version]
    if: needs.fetch-version.outputs.release == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Package project
        run: |
          mkdir -p dist
          tar -czf dist/dev-toolkit-v$SNAPSHOT_VERSION.tar.gz tools/ VERSION dev-toolkit
        env:
          SNAPSHOT_VERSION: ${{ needs.fetch-version.outputs.version }}
      - name: Archive artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: snapshot
          path: dist/*.tar.gz
  release:
    needs: [fetch-version]
    if: needs.fetch-version.outputs.release == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Create tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag v$RELEASE_VERSION
          git push origin v$RELEASE_VERSION
        env:
          RELEASE_VERSION: ${{ needs.fetch-version.outputs.version }}

      - name: Package project
        run: |
          mkdir -p dist
          tar -czf dist/dev-toolkit-v$RELEASE_VERSION.tar.gz tools/ VERSION dev-toolkit
        env:
          RELEASE_VERSION: ${{ needs.fetch-version.outputs.version }}

      - name: Build release notes
        id: changelog
        run: |
          TAG=v${{ needs.fetch-version.outputs.version }}
          awk "/^## $TAG/{flag=1; next} /^## /{flag=0} flag" CHANGES.md > dist/release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.fetch-version.outputs.version }}
          body_path: dist/release_notes.md
          draft: true
          files: |
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Increment patch version and mark as SNAPSHOT
        id: bump_version
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${{ needs.fetch-version.outputs.version }}"
          PATCH=$((PATCH + 1))
          NEXT_VERSION="${MAJOR}.${MINOR}.${PATCH}-SNAPSHOT"
          echo "$NEXT_VERSION" > VERSION
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Commit and push new SNAPSHOT version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add VERSION
          git commit -m "Bump version to ${{ steps.bump_version.outputs.next_version }}"
          git push origin HEAD
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
